---
apiVersion: v1
kind: Namespace
metadata:
  name: flask-app
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sqlite-data
  namespace: flask-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-app
  namespace: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
      - name: flask-app
        image: <username>/<repo-name>:<tag>
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: sqlite-data
          mountPath: /app/data
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          allowPrivilegeEscalation: false
      volumes:
      - name: sqlite-data
        persistentVolumeClaim:
          claimName: sqlite-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: flask-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: <username>/<repo-name>:<tag>
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        securityContext:
          runAsUser: 101  # nginx user ID
          runAsGroup: 101  # nginx group ID
          allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app
  namespace: flask-app
spec:
  selector:
    app: flask-app
  ports:
  - port: 5000
    targetPort: 5000
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: flask-app
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 8080
  type: LoadBalancer
